// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: Messages.proto
// Protobuf C++ Version: 5.29.0

#ifndef Messages_2eproto_2epb_2eh
#define Messages_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "Enums.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_Messages_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_Messages_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_Messages_2eproto;
class AddPhotoRequest;
struct AddPhotoRequestDefaultTypeInternal;
extern AddPhotoRequestDefaultTypeInternal _AddPhotoRequest_default_instance_;
class AddPhotoResponse;
struct AddPhotoResponseDefaultTypeInternal;
extern AddPhotoResponseDefaultTypeInternal _AddPhotoResponse_default_instance_;
class Employee;
struct EmployeeDefaultTypeInternal;
extern EmployeeDefaultTypeInternal _Employee_default_instance_;
class EmployeeRequest;
struct EmployeeRequestDefaultTypeInternal;
extern EmployeeRequestDefaultTypeInternal _EmployeeRequest_default_instance_;
class EmployeeResponse;
struct EmployeeResponseDefaultTypeInternal;
extern EmployeeResponseDefaultTypeInternal _EmployeeResponse_default_instance_;
class GetAllRequest;
struct GetAllRequestDefaultTypeInternal;
extern GetAllRequestDefaultTypeInternal _GetAllRequest_default_instance_;
class GetByNoRequest;
struct GetByNoRequestDefaultTypeInternal;
extern GetByNoRequestDefaultTypeInternal _GetByNoRequest_default_instance_;
class MonthSalary;
struct MonthSalaryDefaultTypeInternal;
extern MonthSalaryDefaultTypeInternal _MonthSalary_default_instance_;
class TokenRequest;
struct TokenRequestDefaultTypeInternal;
extern TokenRequestDefaultTypeInternal _TokenRequest_default_instance_;
class TokenResponse;
struct TokenResponseDefaultTypeInternal;
extern TokenResponseDefaultTypeInternal _TokenResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class TokenRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TokenRequest) */ {
 public:
  inline TokenRequest() : TokenRequest(nullptr) {}
  ~TokenRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TokenRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TokenRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TokenRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TokenRequest(const TokenRequest& from) : TokenRequest(nullptr, from) {}
  inline TokenRequest(TokenRequest&& from) noexcept
      : TokenRequest(nullptr, std::move(from)) {}
  inline TokenRequest& operator=(const TokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TokenRequest& operator=(TokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TokenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const TokenRequest* internal_default_instance() {
    return reinterpret_cast<const TokenRequest*>(
        &_TokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TokenRequest& a, TokenRequest& b) { a.Swap(&b); }
  inline void Swap(TokenRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TokenRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TokenRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TokenRequest& from) { TokenRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TokenRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TokenRequest"; }

 protected:
  explicit TokenRequest(::google::protobuf::Arena* arena);
  TokenRequest(::google::protobuf::Arena* arena, const TokenRequest& from);
  TokenRequest(::google::protobuf::Arena* arena, TokenRequest&& from) noexcept
      : TokenRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 1,
    kPasswordFieldNumber = 2,
  };
  // string username = 1;
  void clear_username() ;
  const std::string& username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  std::string* mutable_username();
  PROTOBUF_NODISCARD std::string* release_username();
  void set_allocated_username(std::string* value);

  private:
  const std::string& _internal_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_username(
      const std::string& value);
  std::string* _internal_mutable_username();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // @@protoc_insertion_point(class_scope:TokenRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TokenRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class MonthSalary final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonthSalary) */ {
 public:
  inline MonthSalary() : MonthSalary(nullptr) {}
  ~MonthSalary() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MonthSalary* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MonthSalary));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MonthSalary(
      ::google::protobuf::internal::ConstantInitialized);

  inline MonthSalary(const MonthSalary& from) : MonthSalary(nullptr, from) {}
  inline MonthSalary(MonthSalary&& from) noexcept
      : MonthSalary(nullptr, std::move(from)) {}
  inline MonthSalary& operator=(const MonthSalary& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonthSalary& operator=(MonthSalary&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MonthSalary& default_instance() {
    return *internal_default_instance();
  }
  static inline const MonthSalary* internal_default_instance() {
    return reinterpret_cast<const MonthSalary*>(
        &_MonthSalary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MonthSalary& a, MonthSalary& b) { a.Swap(&b); }
  inline void Swap(MonthSalary* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MonthSalary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MonthSalary* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MonthSalary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MonthSalary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MonthSalary& from) { MonthSalary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MonthSalary* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MonthSalary"; }

 protected:
  explicit MonthSalary(::google::protobuf::Arena* arena);
  MonthSalary(::google::protobuf::Arena* arena, const MonthSalary& from);
  MonthSalary(::google::protobuf::Arena* arena, MonthSalary&& from) noexcept
      : MonthSalary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBasicFieldNumber = 1,
    kBonusFieldNumber = 2,
  };
  // float basic = 1;
  void clear_basic() ;
  float basic() const;
  void set_basic(float value);

  private:
  float _internal_basic() const;
  void _internal_set_basic(float value);

  public:
  // float bonus = 2;
  void clear_bonus() ;
  float bonus() const;
  void set_bonus(float value);

  private:
  float _internal_bonus() const;
  void _internal_set_bonus(float value);

  public:
  // @@protoc_insertion_point(class_scope:MonthSalary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MonthSalary& from_msg);
    float basic_;
    float bonus_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class GetByNoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:GetByNoRequest) */ {
 public:
  inline GetByNoRequest() : GetByNoRequest(nullptr) {}
  ~GetByNoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetByNoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetByNoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetByNoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetByNoRequest(const GetByNoRequest& from) : GetByNoRequest(nullptr, from) {}
  inline GetByNoRequest(GetByNoRequest&& from) noexcept
      : GetByNoRequest(nullptr, std::move(from)) {}
  inline GetByNoRequest& operator=(const GetByNoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetByNoRequest& operator=(GetByNoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetByNoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetByNoRequest* internal_default_instance() {
    return reinterpret_cast<const GetByNoRequest*>(
        &_GetByNoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetByNoRequest& a, GetByNoRequest& b) { a.Swap(&b); }
  inline void Swap(GetByNoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetByNoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetByNoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetByNoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetByNoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetByNoRequest& from) { GetByNoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetByNoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetByNoRequest"; }

 protected:
  explicit GetByNoRequest(::google::protobuf::Arena* arena);
  GetByNoRequest(::google::protobuf::Arena* arena, const GetByNoRequest& from);
  GetByNoRequest(::google::protobuf::Arena* arena, GetByNoRequest&& from) noexcept
      : GetByNoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNoFieldNumber = 1,
  };
  // int32 no = 1;
  void clear_no() ;
  ::int32_t no() const;
  void set_no(::int32_t value);

  private:
  ::int32_t _internal_no() const;
  void _internal_set_no(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:GetByNoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetByNoRequest& from_msg);
    ::int32_t no_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class GetAllRequest final
    : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:GetAllRequest) */ {
 public:
  inline GetAllRequest() : GetAllRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetAllRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetAllRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetAllRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetAllRequest(const GetAllRequest& from) : GetAllRequest(nullptr, from) {}
  inline GetAllRequest(GetAllRequest&& from) noexcept
      : GetAllRequest(nullptr, std::move(from)) {}
  inline GetAllRequest& operator=(const GetAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetAllRequest& operator=(GetAllRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetAllRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetAllRequest* internal_default_instance() {
    return reinterpret_cast<const GetAllRequest*>(
        &_GetAllRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetAllRequest& a, GetAllRequest& b) { a.Swap(&b); }
  inline void Swap(GetAllRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetAllRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetAllRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetAllRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetAllRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetAllRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "GetAllRequest"; }

 protected:
  explicit GetAllRequest(::google::protobuf::Arena* arena);
  GetAllRequest(::google::protobuf::Arena* arena, const GetAllRequest& from);
  GetAllRequest(::google::protobuf::Arena* arena, GetAllRequest&& from) noexcept
      : GetAllRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:GetAllRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetAllRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class AddPhotoResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AddPhotoResponse) */ {
 public:
  inline AddPhotoResponse() : AddPhotoResponse(nullptr) {}
  ~AddPhotoResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddPhotoResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddPhotoResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPhotoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPhotoResponse(const AddPhotoResponse& from) : AddPhotoResponse(nullptr, from) {}
  inline AddPhotoResponse(AddPhotoResponse&& from) noexcept
      : AddPhotoResponse(nullptr, std::move(from)) {}
  inline AddPhotoResponse& operator=(const AddPhotoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPhotoResponse& operator=(AddPhotoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPhotoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPhotoResponse* internal_default_instance() {
    return reinterpret_cast<const AddPhotoResponse*>(
        &_AddPhotoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddPhotoResponse& a, AddPhotoResponse& b) { a.Swap(&b); }
  inline void Swap(AddPhotoResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPhotoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPhotoResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddPhotoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPhotoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPhotoResponse& from) { AddPhotoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddPhotoResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AddPhotoResponse"; }

 protected:
  explicit AddPhotoResponse(::google::protobuf::Arena* arena);
  AddPhotoResponse(::google::protobuf::Arena* arena, const AddPhotoResponse& from);
  AddPhotoResponse(::google::protobuf::Arena* arena, AddPhotoResponse&& from) noexcept
      : AddPhotoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIsOkFieldNumber = 1,
  };
  // bool isOk = 1;
  void clear_isok() ;
  bool isok() const;
  void set_isok(bool value);

  private:
  bool _internal_isok() const;
  void _internal_set_isok(bool value);

  public:
  // @@protoc_insertion_point(class_scope:AddPhotoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPhotoResponse& from_msg);
    bool isok_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class AddPhotoRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:AddPhotoRequest) */ {
 public:
  inline AddPhotoRequest() : AddPhotoRequest(nullptr) {}
  ~AddPhotoRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddPhotoRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddPhotoRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddPhotoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddPhotoRequest(const AddPhotoRequest& from) : AddPhotoRequest(nullptr, from) {}
  inline AddPhotoRequest(AddPhotoRequest&& from) noexcept
      : AddPhotoRequest(nullptr, std::move(from)) {}
  inline AddPhotoRequest& operator=(const AddPhotoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddPhotoRequest& operator=(AddPhotoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddPhotoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddPhotoRequest* internal_default_instance() {
    return reinterpret_cast<const AddPhotoRequest*>(
        &_AddPhotoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(AddPhotoRequest& a, AddPhotoRequest& b) { a.Swap(&b); }
  inline void Swap(AddPhotoRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddPhotoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddPhotoRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddPhotoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddPhotoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddPhotoRequest& from) { AddPhotoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddPhotoRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "AddPhotoRequest"; }

 protected:
  explicit AddPhotoRequest(::google::protobuf::Arena* arena);
  AddPhotoRequest(::google::protobuf::Arena* arena, const AddPhotoRequest& from);
  AddPhotoRequest(::google::protobuf::Arena* arena, AddPhotoRequest&& from) noexcept
      : AddPhotoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // bytes data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:AddPhotoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddPhotoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class TokenResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:TokenResponse) */ {
 public:
  inline TokenResponse() : TokenResponse(nullptr) {}
  ~TokenResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TokenResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TokenResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TokenResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline TokenResponse(const TokenResponse& from) : TokenResponse(nullptr, from) {}
  inline TokenResponse(TokenResponse&& from) noexcept
      : TokenResponse(nullptr, std::move(from)) {}
  inline TokenResponse& operator=(const TokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TokenResponse& operator=(TokenResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TokenResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const TokenResponse* internal_default_instance() {
    return reinterpret_cast<const TokenResponse*>(
        &_TokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(TokenResponse& a, TokenResponse& b) { a.Swap(&b); }
  inline void Swap(TokenResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TokenResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TokenResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TokenResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TokenResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TokenResponse& from) { TokenResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TokenResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "TokenResponse"; }

 protected:
  explicit TokenResponse(::google::protobuf::Arena* arena);
  TokenResponse(::google::protobuf::Arena* arena, const TokenResponse& from);
  TokenResponse(::google::protobuf::Arena* arena, TokenResponse&& from) noexcept
      : TokenResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 1,
    kExpirationFieldNumber = 2,
    kSuccessFieldNumber = 3,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .google.protobuf.Timestamp expiration = 2;
  bool has_expiration() const;
  void clear_expiration() ;
  const ::google::protobuf::Timestamp& expiration() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expiration();
  ::google::protobuf::Timestamp* mutable_expiration();
  void set_allocated_expiration(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expiration();

  private:
  const ::google::protobuf::Timestamp& _internal_expiration() const;
  ::google::protobuf::Timestamp* _internal_mutable_expiration();

  public:
  // bool success = 3;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:TokenResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      27, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TokenResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::Timestamp* expiration_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class Employee final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Employee) */ {
 public:
  inline Employee() : Employee(nullptr) {}
  ~Employee() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Employee* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Employee));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Employee(
      ::google::protobuf::internal::ConstantInitialized);

  inline Employee(const Employee& from) : Employee(nullptr, from) {}
  inline Employee(Employee&& from) noexcept
      : Employee(nullptr, std::move(from)) {}
  inline Employee& operator=(const Employee& from) {
    CopyFrom(from);
    return *this;
  }
  inline Employee& operator=(Employee&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Employee& default_instance() {
    return *internal_default_instance();
  }
  static inline const Employee* internal_default_instance() {
    return reinterpret_cast<const Employee*>(
        &_Employee_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Employee& a, Employee& b) { a.Swap(&b); }
  inline void Swap(Employee* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Employee* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Employee* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Employee>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Employee& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Employee& from) { Employee::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Employee* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Employee"; }

 protected:
  explicit Employee(::google::protobuf::Arena* arena);
  Employee(::google::protobuf::Arena* arena, const Employee& from);
  Employee(::google::protobuf::Arena* arena, Employee&& from) noexcept
      : Employee(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFirstNameFieldNumber = 3,
    kLastNameFieldNumber = 4,
    kMonthSalaryFieldNumber = 6,
    kLastModifiedFieldNumber = 8,
    kIdFieldNumber = 1,
    kNoFieldNumber = 2,
    kStatusFieldNumber = 7,
  };
  // string firstName = 3;
  void clear_firstname() ;
  const std::string& firstname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_firstname(Arg_&& arg, Args_... args);
  std::string* mutable_firstname();
  PROTOBUF_NODISCARD std::string* release_firstname();
  void set_allocated_firstname(std::string* value);

  private:
  const std::string& _internal_firstname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_firstname(
      const std::string& value);
  std::string* _internal_mutable_firstname();

  public:
  // string lastName = 4;
  void clear_lastname() ;
  const std::string& lastname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lastname(Arg_&& arg, Args_... args);
  std::string* mutable_lastname();
  PROTOBUF_NODISCARD std::string* release_lastname();
  void set_allocated_lastname(std::string* value);

  private:
  const std::string& _internal_lastname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lastname(
      const std::string& value);
  std::string* _internal_mutable_lastname();

  public:
  // .MonthSalary monthSalary = 6;
  bool has_monthsalary() const;
  void clear_monthsalary() ;
  const ::MonthSalary& monthsalary() const;
  PROTOBUF_NODISCARD ::MonthSalary* release_monthsalary();
  ::MonthSalary* mutable_monthsalary();
  void set_allocated_monthsalary(::MonthSalary* value);
  void unsafe_arena_set_allocated_monthsalary(::MonthSalary* value);
  ::MonthSalary* unsafe_arena_release_monthsalary();

  private:
  const ::MonthSalary& _internal_monthsalary() const;
  ::MonthSalary* _internal_mutable_monthsalary();

  public:
  // .google.protobuf.Timestamp lastModified = 8;
  bool has_lastmodified() const;
  void clear_lastmodified() ;
  const ::google::protobuf::Timestamp& lastmodified() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_lastmodified();
  ::google::protobuf::Timestamp* mutable_lastmodified();
  void set_allocated_lastmodified(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_lastmodified(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_lastmodified();

  private:
  const ::google::protobuf::Timestamp& _internal_lastmodified() const;
  ::google::protobuf::Timestamp* _internal_mutable_lastmodified();

  public:
  // int32 id = 1;
  void clear_id() ;
  ::int32_t id() const;
  void set_id(::int32_t value);

  private:
  ::int32_t _internal_id() const;
  void _internal_set_id(::int32_t value);

  public:
  // int32 no = 2;
  void clear_no() ;
  ::int32_t no() const;
  void set_no(::int32_t value);

  private:
  ::int32_t _internal_no() const;
  void _internal_set_no(::int32_t value);

  public:
  // .EmployeeStatus status = 7;
  void clear_status() ;
  ::EmployeeStatus status() const;
  void set_status(::EmployeeStatus value);

  private:
  ::EmployeeStatus _internal_status() const;
  void _internal_set_status(::EmployeeStatus value);

  public:
  // @@protoc_insertion_point(class_scope:Employee)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Employee& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr firstname_;
    ::google::protobuf::internal::ArenaStringPtr lastname_;
    ::MonthSalary* monthsalary_;
    ::google::protobuf::Timestamp* lastmodified_;
    ::int32_t id_;
    ::int32_t no_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class EmployeeResponse final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EmployeeResponse) */ {
 public:
  inline EmployeeResponse() : EmployeeResponse(nullptr) {}
  ~EmployeeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EmployeeResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EmployeeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmployeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmployeeResponse(const EmployeeResponse& from) : EmployeeResponse(nullptr, from) {}
  inline EmployeeResponse(EmployeeResponse&& from) noexcept
      : EmployeeResponse(nullptr, std::move(from)) {}
  inline EmployeeResponse& operator=(const EmployeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmployeeResponse& operator=(EmployeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmployeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmployeeResponse* internal_default_instance() {
    return reinterpret_cast<const EmployeeResponse*>(
        &_EmployeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(EmployeeResponse& a, EmployeeResponse& b) { a.Swap(&b); }
  inline void Swap(EmployeeResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmployeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmployeeResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EmployeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmployeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EmployeeResponse& from) { EmployeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EmployeeResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EmployeeResponse"; }

 protected:
  explicit EmployeeResponse(::google::protobuf::Arena* arena);
  EmployeeResponse(::google::protobuf::Arena* arena, const EmployeeResponse& from);
  EmployeeResponse(::google::protobuf::Arena* arena, EmployeeResponse&& from) noexcept
      : EmployeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmployeeFieldNumber = 1,
  };
  // .Employee employee = 1;
  bool has_employee() const;
  void clear_employee() ;
  const ::Employee& employee() const;
  PROTOBUF_NODISCARD ::Employee* release_employee();
  ::Employee* mutable_employee();
  void set_allocated_employee(::Employee* value);
  void unsafe_arena_set_allocated_employee(::Employee* value);
  ::Employee* unsafe_arena_release_employee();

  private:
  const ::Employee& _internal_employee() const;
  ::Employee* _internal_mutable_employee();

  public:
  // @@protoc_insertion_point(class_scope:EmployeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmployeeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::Employee* employee_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};
// -------------------------------------------------------------------

class EmployeeRequest final
    : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:EmployeeRequest) */ {
 public:
  inline EmployeeRequest() : EmployeeRequest(nullptr) {}
  ~EmployeeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EmployeeRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EmployeeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EmployeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EmployeeRequest(const EmployeeRequest& from) : EmployeeRequest(nullptr, from) {}
  inline EmployeeRequest(EmployeeRequest&& from) noexcept
      : EmployeeRequest(nullptr, std::move(from)) {}
  inline EmployeeRequest& operator=(const EmployeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmployeeRequest& operator=(EmployeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmployeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmployeeRequest* internal_default_instance() {
    return reinterpret_cast<const EmployeeRequest*>(
        &_EmployeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(EmployeeRequest& a, EmployeeRequest& b) { a.Swap(&b); }
  inline void Swap(EmployeeRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmployeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmployeeRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EmployeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmployeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EmployeeRequest& from) { EmployeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EmployeeRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "EmployeeRequest"; }

 protected:
  explicit EmployeeRequest(::google::protobuf::Arena* arena);
  EmployeeRequest(::google::protobuf::Arena* arena, const EmployeeRequest& from);
  EmployeeRequest(::google::protobuf::Arena* arena, EmployeeRequest&& from) noexcept
      : EmployeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEmployeeFieldNumber = 1,
  };
  // .Employee employee = 1;
  bool has_employee() const;
  void clear_employee() ;
  const ::Employee& employee() const;
  PROTOBUF_NODISCARD ::Employee* release_employee();
  ::Employee* mutable_employee();
  void set_allocated_employee(::Employee* value);
  void unsafe_arena_set_allocated_employee(::Employee* value);
  ::Employee* unsafe_arena_release_employee();

  private:
  const ::Employee& _internal_employee() const;
  ::Employee* _internal_mutable_employee();

  public:
  // @@protoc_insertion_point(class_scope:EmployeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EmployeeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::Employee* employee_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_Messages_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Employee

// int32 id = 1;
inline void Employee::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t Employee::id() const {
  // @@protoc_insertion_point(field_get:Employee.id)
  return _internal_id();
}
inline void Employee::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Employee.id)
}
inline ::int32_t Employee::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void Employee::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// int32 no = 2;
inline void Employee::clear_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_ = 0;
}
inline ::int32_t Employee::no() const {
  // @@protoc_insertion_point(field_get:Employee.no)
  return _internal_no();
}
inline void Employee::set_no(::int32_t value) {
  _internal_set_no(value);
  // @@protoc_insertion_point(field_set:Employee.no)
}
inline ::int32_t Employee::_internal_no() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_;
}
inline void Employee::_internal_set_no(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_ = value;
}

// string firstName = 3;
inline void Employee::clear_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.ClearToEmpty();
}
inline const std::string& Employee::firstname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.firstName)
  return _internal_firstname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Employee::set_firstname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Employee.firstName)
}
inline std::string* Employee::mutable_firstname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_firstname();
  // @@protoc_insertion_point(field_mutable:Employee.firstName)
  return _s;
}
inline const std::string& Employee::_internal_firstname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.firstname_.Get();
}
inline void Employee::_internal_set_firstname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.Set(value, GetArena());
}
inline std::string* Employee::_internal_mutable_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.firstname_.Mutable( GetArena());
}
inline std::string* Employee::release_firstname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.firstName)
  return _impl_.firstname_.Release();
}
inline void Employee::set_allocated_firstname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.firstname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.firstname_.IsDefault()) {
    _impl_.firstname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Employee.firstName)
}

// string lastName = 4;
inline void Employee::clear_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.ClearToEmpty();
}
inline const std::string& Employee::lastname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.lastName)
  return _internal_lastname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Employee::set_lastname(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:Employee.lastName)
}
inline std::string* Employee::mutable_lastname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lastname();
  // @@protoc_insertion_point(field_mutable:Employee.lastName)
  return _s;
}
inline const std::string& Employee::_internal_lastname() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastname_.Get();
}
inline void Employee::_internal_set_lastname(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.Set(value, GetArena());
}
inline std::string* Employee::_internal_mutable_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.lastname_.Mutable( GetArena());
}
inline std::string* Employee::release_lastname() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.lastName)
  return _impl_.lastname_.Release();
}
inline void Employee::set_allocated_lastname(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastname_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.lastname_.IsDefault()) {
    _impl_.lastname_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:Employee.lastName)
}

// .MonthSalary monthSalary = 6;
inline bool Employee::has_monthsalary() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.monthsalary_ != nullptr);
  return value;
}
inline void Employee::clear_monthsalary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monthsalary_ != nullptr) _impl_.monthsalary_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonthSalary& Employee::_internal_monthsalary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonthSalary* p = _impl_.monthsalary_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonthSalary&>(::_MonthSalary_default_instance_);
}
inline const ::MonthSalary& Employee::monthsalary() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.monthSalary)
  return _internal_monthsalary();
}
inline void Employee::unsafe_arena_set_allocated_monthsalary(::MonthSalary* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.monthsalary_);
  }
  _impl_.monthsalary_ = reinterpret_cast<::MonthSalary*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Employee.monthSalary)
}
inline ::MonthSalary* Employee::release_monthsalary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonthSalary* released = _impl_.monthsalary_;
  _impl_.monthsalary_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::MonthSalary* Employee::unsafe_arena_release_monthsalary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.monthSalary)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonthSalary* temp = _impl_.monthsalary_;
  _impl_.monthsalary_ = nullptr;
  return temp;
}
inline ::MonthSalary* Employee::_internal_mutable_monthsalary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.monthsalary_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonthSalary>(GetArena());
    _impl_.monthsalary_ = reinterpret_cast<::MonthSalary*>(p);
  }
  return _impl_.monthsalary_;
}
inline ::MonthSalary* Employee::mutable_monthsalary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonthSalary* _msg = _internal_mutable_monthsalary();
  // @@protoc_insertion_point(field_mutable:Employee.monthSalary)
  return _msg;
}
inline void Employee::set_allocated_monthsalary(::MonthSalary* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.monthsalary_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.monthsalary_ = reinterpret_cast<::MonthSalary*>(value);
  // @@protoc_insertion_point(field_set_allocated:Employee.monthSalary)
}

// .EmployeeStatus status = 7;
inline void Employee::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::EmployeeStatus Employee::status() const {
  // @@protoc_insertion_point(field_get:Employee.status)
  return _internal_status();
}
inline void Employee::set_status(::EmployeeStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Employee.status)
}
inline ::EmployeeStatus Employee::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::EmployeeStatus>(_impl_.status_);
}
inline void Employee::_internal_set_status(::EmployeeStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .google.protobuf.Timestamp lastModified = 8;
inline bool Employee::has_lastmodified() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lastmodified_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& Employee::_internal_lastmodified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.lastmodified_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& Employee::lastmodified() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Employee.lastModified)
  return _internal_lastmodified();
}
inline void Employee::unsafe_arena_set_allocated_lastmodified(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lastmodified_);
  }
  _impl_.lastmodified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Employee.lastModified)
}
inline ::google::protobuf::Timestamp* Employee::release_lastmodified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.lastmodified_;
  _impl_.lastmodified_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* Employee::unsafe_arena_release_lastmodified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:Employee.lastModified)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.lastmodified_;
  _impl_.lastmodified_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* Employee::_internal_mutable_lastmodified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.lastmodified_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.lastmodified_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.lastmodified_;
}
inline ::google::protobuf::Timestamp* Employee::mutable_lastmodified() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_lastmodified();
  // @@protoc_insertion_point(field_mutable:Employee.lastModified)
  return _msg;
}
inline void Employee::set_allocated_lastmodified(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lastmodified_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.lastmodified_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:Employee.lastModified)
}

// -------------------------------------------------------------------

// MonthSalary

// float basic = 1;
inline void MonthSalary::clear_basic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basic_ = 0;
}
inline float MonthSalary::basic() const {
  // @@protoc_insertion_point(field_get:MonthSalary.basic)
  return _internal_basic();
}
inline void MonthSalary::set_basic(float value) {
  _internal_set_basic(value);
  // @@protoc_insertion_point(field_set:MonthSalary.basic)
}
inline float MonthSalary::_internal_basic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.basic_;
}
inline void MonthSalary::_internal_set_basic(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.basic_ = value;
}

// float bonus = 2;
inline void MonthSalary::clear_bonus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonus_ = 0;
}
inline float MonthSalary::bonus() const {
  // @@protoc_insertion_point(field_get:MonthSalary.bonus)
  return _internal_bonus();
}
inline void MonthSalary::set_bonus(float value) {
  _internal_set_bonus(value);
  // @@protoc_insertion_point(field_set:MonthSalary.bonus)
}
inline float MonthSalary::_internal_bonus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bonus_;
}
inline void MonthSalary::_internal_set_bonus(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bonus_ = value;
}

// -------------------------------------------------------------------

// GetByNoRequest

// int32 no = 1;
inline void GetByNoRequest::clear_no() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_ = 0;
}
inline ::int32_t GetByNoRequest::no() const {
  // @@protoc_insertion_point(field_get:GetByNoRequest.no)
  return _internal_no();
}
inline void GetByNoRequest::set_no(::int32_t value) {
  _internal_set_no(value);
  // @@protoc_insertion_point(field_set:GetByNoRequest.no)
}
inline ::int32_t GetByNoRequest::_internal_no() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_;
}
inline void GetByNoRequest::_internal_set_no(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_ = value;
}

// -------------------------------------------------------------------

// EmployeeRequest

// .Employee employee = 1;
inline bool EmployeeRequest::has_employee() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.employee_ != nullptr);
  return value;
}
inline void EmployeeRequest::clear_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.employee_ != nullptr) _impl_.employee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Employee& EmployeeRequest::_internal_employee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Employee* p = _impl_.employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::Employee&>(::_Employee_default_instance_);
}
inline const ::Employee& EmployeeRequest::employee() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EmployeeRequest.employee)
  return _internal_employee();
}
inline void EmployeeRequest::unsafe_arena_set_allocated_employee(::Employee* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.employee_);
  }
  _impl_.employee_ = reinterpret_cast<::Employee*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EmployeeRequest.employee)
}
inline ::Employee* EmployeeRequest::release_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Employee* released = _impl_.employee_;
  _impl_.employee_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Employee* EmployeeRequest::unsafe_arena_release_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EmployeeRequest.employee)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Employee* temp = _impl_.employee_;
  _impl_.employee_ = nullptr;
  return temp;
}
inline ::Employee* EmployeeRequest::_internal_mutable_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.employee_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Employee>(GetArena());
    _impl_.employee_ = reinterpret_cast<::Employee*>(p);
  }
  return _impl_.employee_;
}
inline ::Employee* EmployeeRequest::mutable_employee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Employee* _msg = _internal_mutable_employee();
  // @@protoc_insertion_point(field_mutable:EmployeeRequest.employee)
  return _msg;
}
inline void EmployeeRequest::set_allocated_employee(::Employee* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.employee_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.employee_ = reinterpret_cast<::Employee*>(value);
  // @@protoc_insertion_point(field_set_allocated:EmployeeRequest.employee)
}

// -------------------------------------------------------------------

// EmployeeResponse

// .Employee employee = 1;
inline bool EmployeeResponse::has_employee() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.employee_ != nullptr);
  return value;
}
inline void EmployeeResponse::clear_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.employee_ != nullptr) _impl_.employee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::Employee& EmployeeResponse::_internal_employee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::Employee* p = _impl_.employee_;
  return p != nullptr ? *p : reinterpret_cast<const ::Employee&>(::_Employee_default_instance_);
}
inline const ::Employee& EmployeeResponse::employee() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:EmployeeResponse.employee)
  return _internal_employee();
}
inline void EmployeeResponse::unsafe_arena_set_allocated_employee(::Employee* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.employee_);
  }
  _impl_.employee_ = reinterpret_cast<::Employee*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:EmployeeResponse.employee)
}
inline ::Employee* EmployeeResponse::release_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Employee* released = _impl_.employee_;
  _impl_.employee_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::Employee* EmployeeResponse::unsafe_arena_release_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:EmployeeResponse.employee)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::Employee* temp = _impl_.employee_;
  _impl_.employee_ = nullptr;
  return temp;
}
inline ::Employee* EmployeeResponse::_internal_mutable_employee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.employee_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::Employee>(GetArena());
    _impl_.employee_ = reinterpret_cast<::Employee*>(p);
  }
  return _impl_.employee_;
}
inline ::Employee* EmployeeResponse::mutable_employee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::Employee* _msg = _internal_mutable_employee();
  // @@protoc_insertion_point(field_mutable:EmployeeResponse.employee)
  return _msg;
}
inline void EmployeeResponse::set_allocated_employee(::Employee* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.employee_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.employee_ = reinterpret_cast<::Employee*>(value);
  // @@protoc_insertion_point(field_set_allocated:EmployeeResponse.employee)
}

// -------------------------------------------------------------------

// GetAllRequest

// -------------------------------------------------------------------

// AddPhotoRequest

// int32 id = 1;
inline void AddPhotoRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = 0;
}
inline ::int32_t AddPhotoRequest::id() const {
  // @@protoc_insertion_point(field_get:AddPhotoRequest.id)
  return _internal_id();
}
inline void AddPhotoRequest::set_id(::int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:AddPhotoRequest.id)
}
inline ::int32_t AddPhotoRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_;
}
inline void AddPhotoRequest::_internal_set_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_ = value;
}

// bytes data = 2;
inline void AddPhotoRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& AddPhotoRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:AddPhotoRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddPhotoRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:AddPhotoRequest.data)
}
inline std::string* AddPhotoRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:AddPhotoRequest.data)
  return _s;
}
inline const std::string& AddPhotoRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void AddPhotoRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* AddPhotoRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* AddPhotoRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:AddPhotoRequest.data)
  return _impl_.data_.Release();
}
inline void AddPhotoRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:AddPhotoRequest.data)
}

// -------------------------------------------------------------------

// AddPhotoResponse

// bool isOk = 1;
inline void AddPhotoResponse::clear_isok() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isok_ = false;
}
inline bool AddPhotoResponse::isok() const {
  // @@protoc_insertion_point(field_get:AddPhotoResponse.isOk)
  return _internal_isok();
}
inline void AddPhotoResponse::set_isok(bool value) {
  _internal_set_isok(value);
  // @@protoc_insertion_point(field_set:AddPhotoResponse.isOk)
}
inline bool AddPhotoResponse::_internal_isok() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isok_;
}
inline void AddPhotoResponse::_internal_set_isok(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isok_ = value;
}

// -------------------------------------------------------------------

// TokenRequest

// string username = 1;
inline void TokenRequest::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
}
inline const std::string& TokenRequest::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TokenRequest.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TokenRequest::set_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:TokenRequest.username)
}
inline std::string* TokenRequest::mutable_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:TokenRequest.username)
  return _s;
}
inline const std::string& TokenRequest::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void TokenRequest::_internal_set_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.Set(value, GetArena());
}
inline std::string* TokenRequest::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.username_.Mutable( GetArena());
}
inline std::string* TokenRequest::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:TokenRequest.username)
  return _impl_.username_.Release();
}
inline void TokenRequest::set_allocated_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:TokenRequest.username)
}

// string password = 2;
inline void TokenRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& TokenRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TokenRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TokenRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:TokenRequest.password)
}
inline std::string* TokenRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:TokenRequest.password)
  return _s;
}
inline const std::string& TokenRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void TokenRequest::_internal_set_password(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.Set(value, GetArena());
}
inline std::string* TokenRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* TokenRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:TokenRequest.password)
  return _impl_.password_.Release();
}
inline void TokenRequest::set_allocated_password(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:TokenRequest.password)
}

// -------------------------------------------------------------------

// TokenResponse

// string token = 1;
inline void TokenResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& TokenResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TokenResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TokenResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:TokenResponse.token)
}
inline std::string* TokenResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:TokenResponse.token)
  return _s;
}
inline const std::string& TokenResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void TokenResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* TokenResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* TokenResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:TokenResponse.token)
  return _impl_.token_.Release();
}
inline void TokenResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.token_.IsDefault()) {
    _impl_.token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:TokenResponse.token)
}

// .google.protobuf.Timestamp expiration = 2;
inline bool TokenResponse::has_expiration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expiration_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& TokenResponse::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.expiration_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& TokenResponse::expiration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TokenResponse.expiration)
  return _internal_expiration();
}
inline void TokenResponse::unsafe_arena_set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }
  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:TokenResponse.expiration)
}
inline ::google::protobuf::Timestamp* TokenResponse::release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* TokenResponse::unsafe_arena_release_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:TokenResponse.expiration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.expiration_;
  _impl_.expiration_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* TokenResponse::_internal_mutable_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.expiration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expiration_;
}
inline ::google::protobuf::Timestamp* TokenResponse::mutable_expiration() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expiration();
  // @@protoc_insertion_point(field_mutable:TokenResponse.expiration)
  return _msg;
}
inline void TokenResponse::set_allocated_expiration(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expiration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.expiration_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:TokenResponse.expiration)
}

// bool success = 3;
inline void TokenResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool TokenResponse::success() const {
  // @@protoc_insertion_point(field_get:TokenResponse.success)
  return _internal_success();
}
inline void TokenResponse::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:TokenResponse.success)
}
inline bool TokenResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void TokenResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // Messages_2eproto_2epb_2eh
